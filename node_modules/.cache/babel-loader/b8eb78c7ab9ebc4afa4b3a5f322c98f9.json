{"ast":null,"code":"var _jsxFileName = \"/home/denner/Documentos/WebDevelopment/trybe-projects/project-trivia-react-redux/sd-07-project-trivia-react-redux/src/pages/Game.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Header from '../components/Header';\n\nclass Game extends Component {\n  render() {\n    const _this$props = this.props,\n          results = _this$props.results,\n          isLoading = _this$props.isLoading;\n\n    if (isLoading || results.length === 0 || results === undefined) {\n      return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      }, \"Carregando\");\n    } // setTimeout(() => console.log(results), 2000);\n\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      \"data-testid\": \"question-category\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, \" Category:\"), console.log(results));\n  }\n\n}\n\nconst mapStateToProps = ({\n  game: {\n    isLoading,\n    questions: {\n      results\n    }\n  }\n}) => ({\n  isLoading,\n  results\n});\n\nexport default connect(mapStateToProps)(Game);\nGame.propTypes = {\n  results: PropTypes.shape({\n    category: PropTypes.string,\n    type: PropTypes.string,\n    difficulty: PropTypes.string,\n    question: PropTypes.string,\n    correct_answer: PropTypes.string,\n    incorrect_answers: PropTypes\n  }).isRequired,\n  isLoading: PropTypes.bool.isRequired\n};","map":{"version":3,"sources":["/home/denner/Documentos/WebDevelopment/trybe-projects/project-trivia-react-redux/sd-07-project-trivia-react-redux/src/pages/Game.js"],"names":["React","Component","connect","PropTypes","Header","Game","render","props","results","isLoading","length","undefined","console","log","mapStateToProps","game","questions","propTypes","shape","category","string","type","difficulty","question","correct_answer","incorrect_answers","isRequired","bool"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AAEA,MAAMC,IAAN,SAAmBJ,SAAnB,CAA6B;AAC3BK,EAAAA,MAAM,GAAG;AAAA,wBACwB,KAAKC,KAD7B;AAAA,UACCC,OADD,eACCA,OADD;AAAA,UACUC,SADV,eACUA,SADV;;AAEP,QAAIA,SAAS,IAAID,OAAO,CAACE,MAAR,KAAmB,CAAhC,IAAqCF,OAAO,KAAKG,SAArD,EAAgE;AAC9D,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF;AAGD,KANM,CAQP;;;AAEA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAG,qBAAY,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,EAGGC,OAAO,CAACC,GAAR,CAAYL,OAAZ,CAHH,CADF;AAOD;;AAlB0B;;AAqB7B,MAAMM,eAAe,GAAG,CAAC;AAAEC,EAAAA,IAAI,EAAE;AAAEN,IAAAA,SAAF;AAAaO,IAAAA,SAAS,EAAE;AAAER,MAAAA;AAAF;AAAxB;AAAR,CAAD,MAAsD;AAC5EC,EAAAA,SAD4E;AAE5ED,EAAAA;AAF4E,CAAtD,CAAxB;;AAKA,eAAeN,OAAO,CAACY,eAAD,CAAP,CAAyBT,IAAzB,CAAf;AAEAA,IAAI,CAACY,SAAL,GAAiB;AACfT,EAAAA,OAAO,EAAEL,SAAS,CAACe,KAAV,CAAgB;AACvBC,IAAAA,QAAQ,EAAEhB,SAAS,CAACiB,MADG;AAEvBC,IAAAA,IAAI,EAAElB,SAAS,CAACiB,MAFO;AAGvBE,IAAAA,UAAU,EAAEnB,SAAS,CAACiB,MAHC;AAIvBG,IAAAA,QAAQ,EAAEpB,SAAS,CAACiB,MAJG;AAKvBI,IAAAA,cAAc,EAAErB,SAAS,CAACiB,MALH;AAMvBK,IAAAA,iBAAiB,EAAEtB;AANI,GAAhB,EAONuB,UARY;AASfjB,EAAAA,SAAS,EAAEN,SAAS,CAACwB,IAAV,CAAeD;AATX,CAAjB","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Header from '../components/Header';\n\nclass Game extends Component {\n  render() {\n    const { results, isLoading } = this.props;\n    if (isLoading || results.length === 0 || results === undefined) {\n      return (\n        <p>Carregando</p>\n      );\n    }\n\n    // setTimeout(() => console.log(results), 2000);\n\n    return (\n      <div>\n        <Header />\n        <p data-testid=\"question-category\"> Category:</p>\n        {console.log(results)}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ game: { isLoading, questions: { results } } }) => ({\n  isLoading,\n  results,\n});\n\nexport default connect(mapStateToProps)(Game);\n\nGame.propTypes = {\n  results: PropTypes.shape({\n    category: PropTypes.string,\n    type: PropTypes.string,\n    difficulty: PropTypes.string,\n    question: PropTypes.string,\n    correct_answer: PropTypes.string,\n    incorrect_answers: PropTypes,\n  }).isRequired,\n  isLoading: PropTypes.bool.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}