{"ast":null,"code":"var _jsxFileName = \"/home/denner/Documentos/WebDevelopment/trybe-projects/project-trivia-react-redux/sd-07-project-trivia-react-redux/src/pages/Feedback.js\";\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Header from '../components/Header';\n\nclass Feedback extends Component {\n  render() {\n    const minAssertions = 3;\n    const _this$props = this.props,\n          assertions = _this$props.assertions,\n          score = _this$props.score;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      \"data-testid\": \"feedback-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, assertions >= minAssertions ? 'Mandou bem!' : 'Podia ser melhor'), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, \"Placar Final\"), React.createElement(\"p\", {\n      \"data-testid\": \"feedback-total-score\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, score), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \"Perguntas Acertadas\"), React.createElement(\"p\", {\n      \"data-testid\": \"feedback-total-question\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, assertions), React.createElement(Link, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      \"data-testid\": \"btn-play-again\",\n      type: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"Jogar Novamente\")), React.createElement(Link, {\n      to: \"/ranking\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      \"data-testid\": \"btn-ranking\",\n      type: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"Ranking\")));\n  }\n\n}\n\nFeedback.propTypes = {\n  assertions: PropTypes.number.isRequired,\n  score: PropTypes.number.isRequired\n};\n\nconst mapStateToProps = state => ({\n  assertions: state.player.assertions,\n  score: state.player.score\n});\n\nexport default connect(mapStateToProps)(Feedback);","map":{"version":3,"sources":["/home/denner/Documentos/WebDevelopment/trybe-projects/project-trivia-react-redux/sd-07-project-trivia-react-redux/src/pages/Feedback.js"],"names":["PropTypes","React","Component","connect","Link","Header","Feedback","render","minAssertions","props","assertions","score","propTypes","number","isRequired","mapStateToProps","state","player"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AAEA,MAAMC,QAAN,SAAuBJ,SAAvB,CAAiC;AAC/BK,EAAAA,MAAM,GAAG;AACP,UAAMC,aAAa,GAAG,CAAtB;AADO,wBAEuB,KAAKC,KAF5B;AAAA,UAECC,UAFD,eAECA,UAFD;AAAA,UAEaC,KAFb,eAEaA,KAFb;AAGP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAG,qBAAY,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEID,UAAU,IAAIF,aAAd,GACI,aADJ,GAEI,kBAJR,CAFF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBATF,EAUE;AAAG,qBAAY,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuCG,KAAvC,CAVF,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAXF,EAYE;AAAG,qBAAY,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0CD,UAA1C,CAZF,EAcE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,qBAAY,gBAApB;AAAqC,MAAA,IAAI,EAAC,QAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,CAdF,EAoBE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,UAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,qBAAY,aAApB;AAAkC,MAAA,IAAI,EAAC,QAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CApBF,CADF;AA4BD;;AAhC8B;;AAmCjCJ,QAAQ,CAACM,SAAT,GAAqB;AACnBF,EAAAA,UAAU,EAAEV,SAAS,CAACa,MAAV,CAAiBC,UADV;AAEnBH,EAAAA,KAAK,EAAEX,SAAS,CAACa,MAAV,CAAiBC;AAFL,CAArB;;AAKA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClCN,EAAAA,UAAU,EAAEM,KAAK,CAACC,MAAN,CAAaP,UADS;AAElCC,EAAAA,KAAK,EAAEK,KAAK,CAACC,MAAN,CAAaN;AAFc,CAAZ,CAAxB;;AAKA,eAAeR,OAAO,CAACY,eAAD,CAAP,CAAyBT,QAAzB,CAAf","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Header from '../components/Header';\n\nclass Feedback extends Component {\n  render() {\n    const minAssertions = 3;\n    const { assertions, score } = this.props;\n    return (\n      <div>\n        <Header />\n        <p data-testid=\"feedback-text\">\n          {\n            assertions >= minAssertions\n              ? 'Mandou bem!'\n              : 'Podia ser melhor'\n          }\n        </p>\n        <h4>Placar Final</h4>\n        <p data-testid=\"feedback-total-score\">{score}</p>\n        <h4>Perguntas Acertadas</h4>\n        <p data-testid=\"feedback-total-question\">{assertions}</p>\n\n        <Link to=\"/\">\n          <button data-testid=\"btn-play-again\" type=\"button\">\n            Jogar Novamente\n          </button>\n        </Link>\n\n        <Link to=\"/ranking\">\n          <button data-testid=\"btn-ranking\" type=\"button\">\n            Ranking\n          </button>\n        </Link>\n      </div>\n    );\n  }\n}\n\nFeedback.propTypes = {\n  assertions: PropTypes.number.isRequired,\n  score: PropTypes.number.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  assertions: state.player.assertions,\n  score: state.player.score,\n});\n\nexport default connect(mapStateToProps)(Feedback);\n"]},"metadata":{},"sourceType":"module"}