{"ast":null,"code":"var _jsxFileName = \"/home/denner/Documentos/WebDevelopment/trybe-projects/project-trivia-react-redux/sd-07-project-trivia-react-redux/src/components/Header.js\";\nimport React, { Component } from 'react';\nimport md5 from 'crypto-js/md5';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { savePicture } from '../redux/actions';\nimport './Header.css';\n\nclass Header extends Component {\n  constructor() {\n    super();\n    this.gravatarHash = this.gravatarHash.bind(this);\n  }\n\n  gravatarHash() {\n    const gravatarEmail = this.props.gravatarEmail;\n    const hash = md5(gravatarEmail);\n    return hash;\n  }\n\n  render() {\n    const _this$props = this.props,\n          name = _this$props.name,\n          score = _this$props.score,\n          savePic = _this$props.savePic;\n    const urlPicture = `https://www.gravatar.com/avatar/${this.gravatarHash()}`;\n    savePic(urlPicture);\n    return React.createElement(\"div\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      \"data-testid\": \"header-profile-picture\",\n      src: urlPicture,\n      className: \"profile-picture\",\n      height: \"100%\",\n      alt: \"Avatar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      \"data-testid\": \"header-player-name\",\n      className: \"header-player-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, name), React.createElement(\"p\", {\n      \"data-testid\": \"header-score\",\n      className: \"header-score\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, score, ' ', \"points\"));\n  }\n\n}\n\nconst mapStateToProps = ({\n  player: {\n    name,\n    gravatarEmail,\n    score\n  }\n}) => ({\n  name,\n  gravatarEmail,\n  score\n});\n\nconst mapDispatchToProps = dispatch => ({\n  savePic: info => dispatch(savePicture(info))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\nHeader.propTypes = {\n  gravatarEmail: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  score: PropTypes.number.isRequired,\n  savePic: PropTypes.func.isRequired\n};","map":{"version":3,"sources":["/home/denner/Documentos/WebDevelopment/trybe-projects/project-trivia-react-redux/sd-07-project-trivia-react-redux/src/components/Header.js"],"names":["React","Component","md5","connect","PropTypes","savePicture","Header","constructor","gravatarHash","bind","gravatarEmail","props","hash","render","name","score","savePic","urlPicture","mapStateToProps","player","mapDispatchToProps","dispatch","info","propTypes","string","isRequired","number","func"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAAgB,eAAhB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAO,cAAP;;AAEA,MAAMC,MAAN,SAAqBL,SAArB,CAA+B;AAC7BM,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAEDD,EAAAA,YAAY,GAAG;AAAA,UACLE,aADK,GACa,KAAKC,KADlB,CACLD,aADK;AAEb,UAAME,IAAI,GAAGV,GAAG,CAACQ,aAAD,CAAhB;AACA,WAAOE,IAAP;AACD;;AAEDC,EAAAA,MAAM,GAAG;AAAA,wBAC0B,KAAKF,KAD/B;AAAA,UACCG,IADD,eACCA,IADD;AAAA,UACOC,KADP,eACOA,KADP;AAAA,UACcC,OADd,eACcA,OADd;AAEP,UAAMC,UAAU,GAAI,mCAAkC,KAAKT,YAAL,EAAoB,EAA1E;AACAQ,IAAAA,OAAO,CAACC,UAAD,CAAP;AAEA,WACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE;AACE,qBAAY,wBADd;AAEE,MAAA,GAAG,EAAGA,UAFR;AAGE,MAAA,SAAS,EAAC,iBAHZ;AAIE,MAAA,MAAM,EAAC,MAJT;AAKE,MAAA,GAAG,EAAC,QALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EASE;AAAG,qBAAY,oBAAf;AAAoC,MAAA,SAAS,EAAC,oBAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqEH,IAArE,CATF,EAWE;AAAG,qBAAY,cAAf;AAA8B,MAAA,SAAS,EAAC,cAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACIC,KADJ,EAEG,GAFH,WAXF,CADF;AAoBD;;AArC4B;;AAwC/B,MAAMG,eAAe,GAAG,CAAC;AAAEC,EAAAA,MAAM,EAAE;AAAEL,IAAAA,IAAF;AAAQJ,IAAAA,aAAR;AAAuBK,IAAAA;AAAvB;AAAV,CAAD,MAAiD;AACvED,EAAAA,IADuE;AAEvEJ,EAAAA,aAFuE;AAGvEK,EAAAA;AAHuE,CAAjD,CAAxB;;AAMA,MAAMK,kBAAkB,GAAIC,QAAD,KAAe;AACxCL,EAAAA,OAAO,EAAGM,IAAD,IAAUD,QAAQ,CAAChB,WAAW,CAACiB,IAAD,CAAZ;AADa,CAAf,CAA3B;;AAIA,eAAenB,OAAO,CAACe,eAAD,EAAkBE,kBAAlB,CAAP,CAA6Cd,MAA7C,CAAf;AAEAA,MAAM,CAACiB,SAAP,GAAmB;AACjBb,EAAAA,aAAa,EAAEN,SAAS,CAACoB,MAAV,CAAiBC,UADf;AAEjBX,EAAAA,IAAI,EAAEV,SAAS,CAACoB,MAAV,CAAiBC,UAFN;AAGjBV,EAAAA,KAAK,EAAEX,SAAS,CAACsB,MAAV,CAAiBD,UAHP;AAIjBT,EAAAA,OAAO,EAAEZ,SAAS,CAACuB,IAAV,CAAeF;AAJP,CAAnB","sourcesContent":["import React, { Component } from 'react';\nimport md5 from 'crypto-js/md5';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { savePicture } from '../redux/actions';\nimport './Header.css';\n\nclass Header extends Component {\n  constructor() {\n    super();\n    this.gravatarHash = this.gravatarHash.bind(this);\n  }\n\n  gravatarHash() {\n    const { gravatarEmail } = this.props;\n    const hash = md5(gravatarEmail);\n    return hash;\n  }\n\n  render() {\n    const { name, score, savePic } = this.props;\n    const urlPicture = `https://www.gravatar.com/avatar/${this.gravatarHash()}`;\n    savePic(urlPicture);\n\n    return (\n      <div className=\"header\">\n        {/* <div className=\"name-and-pic\"> */}\n        <img\n          data-testid=\"header-profile-picture\"\n          src={ urlPicture }\n          className=\"profile-picture\"\n          height=\"100%\"\n          alt=\"Avatar\"\n        />\n        <p data-testid=\"header-player-name\" className=\"header-player-name\">{ name }</p>\n        {/* </div> */}\n        <p data-testid=\"header-score\" className=\"header-score\">\n          { score }\n          {' '}\n          points\n        </p>\n      </div>\n\n    );\n  }\n}\n\nconst mapStateToProps = ({ player: { name, gravatarEmail, score } }) => ({\n  name,\n  gravatarEmail,\n  score,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  savePic: (info) => dispatch(savePicture(info)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\n\nHeader.propTypes = {\n  gravatarEmail: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  score: PropTypes.number.isRequired,\n  savePic: PropTypes.func.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}