{"ast":null,"code":"import _objectSpread from \"/home/denner/Documentos/WebDevelopment/trybe-projects/project-trivia-react-redux/sd-07-project-trivia-react-redux/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport types from '../actions/types';\nconst LOGIN_INITIAL_STATE = {\n  name: '',\n  assertions: 0,\n  score: 0,\n  gravatarEmail: '',\n  tokenString: ''\n};\n\nconst player = (state = LOGIN_INITIAL_STATE, action) => {\n  switch (action.type) {\n    case types.LOGIN_INFO:\n      return _objectSpread({}, state, {\n        name: action.payload.name,\n        gravatarEmail: action.payload.email\n      });\n    // case types.IS_FETCHING:\n    //   return ({\n    //     ...state,\n    //     isLoading: true,\n    //   });\n\n    case types.REQUEST_TOKEN_SUCCESS:\n      return _objectSpread({}, state, {\n        // isLoading: false,\n        tokenString: action.token\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default player;","map":{"version":3,"sources":["/home/denner/Documentos/WebDevelopment/trybe-projects/project-trivia-react-redux/sd-07-project-trivia-react-redux/src/redux/reducers/player.js"],"names":["types","LOGIN_INITIAL_STATE","name","assertions","score","gravatarEmail","tokenString","player","state","action","type","LOGIN_INFO","payload","email","REQUEST_TOKEN_SUCCESS","token"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,kBAAlB;AAEA,MAAMC,mBAAmB,GAAG;AAC1BC,EAAAA,IAAI,EAAE,EADoB;AAE1BC,EAAAA,UAAU,EAAE,CAFc;AAG1BC,EAAAA,KAAK,EAAE,CAHmB;AAI1BC,EAAAA,aAAa,EAAE,EAJW;AAK1BC,EAAAA,WAAW,EAAE;AALa,CAA5B;;AAQA,MAAMC,MAAM,GAAG,CAACC,KAAK,GAAGP,mBAAT,EAA8BQ,MAA9B,KAAyC;AACtD,UAAQA,MAAM,CAACC,IAAf;AACA,SAAKV,KAAK,CAACW,UAAX;AACE,+BACKH,KADL;AAEEN,QAAAA,IAAI,EAAEO,MAAM,CAACG,OAAP,CAAeV,IAFvB;AAGEG,QAAAA,aAAa,EAAEI,MAAM,CAACG,OAAP,CAAeC;AAHhC;AAKF;AACA;AACA;AACA;AACA;;AACA,SAAKb,KAAK,CAACc,qBAAX;AACE,+BACKN,KADL;AAEE;AACAF,QAAAA,WAAW,EAAEG,MAAM,CAACM;AAHtB;;AAKF;AACE,aAAOP,KAAP;AAnBF;AAqBD,CAtBD;;AAwBA,eAAeD,MAAf","sourcesContent":["import types from '../actions/types';\n\nconst LOGIN_INITIAL_STATE = {\n  name: '',\n  assertions: 0,\n  score: 0,\n  gravatarEmail: '',\n  tokenString: '',\n};\n\nconst player = (state = LOGIN_INITIAL_STATE, action) => {\n  switch (action.type) {\n  case types.LOGIN_INFO:\n    return ({\n      ...state,\n      name: action.payload.name,\n      gravatarEmail: action.payload.email,\n    });\n  // case types.IS_FETCHING:\n  //   return ({\n  //     ...state,\n  //     isLoading: true,\n  //   });\n  case types.REQUEST_TOKEN_SUCCESS:\n    return ({\n      ...state,\n      // isLoading: false,\n      tokenString: action.token,\n    });\n  default:\n    return state;\n  }\n};\n\nexport default player;\n"]},"metadata":{},"sourceType":"module"}