{"ast":null,"code":"var _jsxFileName = \"/home/denner/Documentos/WebDevelopment/trybe-projects/project-trivia-react-redux/sd-07-project-trivia-react-redux/src/pages/Login.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { sendLoginInfo, fetchApiToken } from '../redux/actions';\nimport logo from '../trivia.png';\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: '',\n      email: ''\n    };\n    this.isValid = this.isValid.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  isValid() {\n    const _this$state = this.state,\n          name = _this$state.name,\n          email = _this$state.email;\n    const emailValid = /\\S+@\\S+\\.\\S+/;\n\n    if (name !== '' && emailValid.test(email)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  handleChange({\n    target\n  }) {\n    const name = target.name,\n          value = target.value;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleClick() {\n    const _this$state2 = this.state,\n          name = _this$state2.name,\n          email = _this$state2.email;\n    const _this$props = this.props,\n          sendLogin = _this$props.sendLogin,\n          fetchToken = _this$props.fetchToken;\n    sendLogin({\n      name,\n      email\n    });\n    fetchToken();\n  }\n\n  render() {\n    const _this$state3 = this.state,\n          name = _this$state3.name,\n          email = _this$state3.email;\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"App-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: logo,\n      className: \"App-logo\",\n      alt: \"logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"SUA VEZ\"))), React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      value: name,\n      placeholder: \"Nome\",\n      \"data-testid\": \"input-player-name\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"email\",\n      name: \"email\",\n      value: email,\n      placeholder: \"E-mail\",\n      \"data-testid\": \"input-gravatar-email\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"button\",\n      disabled: this.isValid(),\n      \"data-testid\": \"btn-play\",\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Jogar\"), React.createElement(Link, {\n      to: \"/settings\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      \"data-testid\": \"btn-settings\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Configura\\xE7\\xF5es\"))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  sendLogin: info => dispatch(sendLoginInfo(info)),\n  fetchToken: () => dispatch(fetchApiToken())\n});\n\nexport default connect(null, mapDispatchToProps)(Login);\nLogin.propTypes = {\n  sendLogin: PropTypes.func.isRequired,\n  fetchToken: PropTypes.func.isRequired\n};","map":{"version":3,"sources":["/home/denner/Documentos/WebDevelopment/trybe-projects/project-trivia-react-redux/sd-07-project-trivia-react-redux/src/pages/Login.js"],"names":["React","Component","PropTypes","connect","Link","sendLoginInfo","fetchApiToken","logo","Login","constructor","state","name","email","isValid","bind","handleChange","handleClick","emailValid","test","target","value","setState","props","sendLogin","fetchToken","render","mapDispatchToProps","dispatch","info","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { sendLoginInfo, fetchApiToken } from '../redux/actions';\nimport logo from '../trivia.png';\n\nclass Login extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      name: '',\n      email: '',\n    };\n\n    this.isValid = this.isValid.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  isValid() {\n    const { name, email } = this.state;\n    const emailValid = /\\S+@\\S+\\.\\S+/;\n    if (name !== '' && emailValid.test(email)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  handleChange({ target }) {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  }\n\n  handleClick() {\n    const { name, email } = this.state;\n    const { sendLogin, fetchToken } = this.props;\n    sendLogin({ name, email });\n    fetchToken();\n  }\n\n  render() {\n    const { name, email } = this.state;\n    return (\n      <>\n        <div className=\"App\">\n          <header className=\"App-header\">\n            <img src={ logo } className=\"App-logo\" alt=\"logo\" />\n            <p>\n              SUA VEZ\n            </p>\n          </header>\n        </div>\n\n        <form>\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={ name }\n            placeholder=\"Nome\"\n            data-testid=\"input-player-name\"\n            onChange={ this.handleChange }\n          />\n\n          <input\n            type=\"email\"\n            name=\"email\"\n            value={ email }\n            placeholder=\"E-mail\"\n            data-testid=\"input-gravatar-email\"\n            onChange={ this.handleChange }\n          />\n\n          <button\n            type=\"button\"\n            disabled={ this.isValid() }\n            data-testid=\"btn-play\"\n            onClick={ this.handleClick }\n          >\n            Jogar\n          </button>\n          <Link to=\"/settings\">\n            <button\n              type=\"button\"\n              data-testid=\"btn-settings\"\n            >\n              Configurações\n            </button>\n          </Link>\n        </form>\n      </>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  sendLogin: (info) => dispatch(sendLoginInfo(info)),\n  fetchToken: () => dispatch(fetchApiToken()),\n});\n\nexport default connect(null, mapDispatchToProps)(Login);\n\nLogin.propTypes = {\n  sendLogin: PropTypes.func.isRequired,\n  fetchToken: PropTypes.func.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}