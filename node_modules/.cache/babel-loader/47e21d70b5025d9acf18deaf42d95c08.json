{"ast":null,"code":"var _jsxFileName = \"/home/denner/Documentos/WebDevelopment/trybe-projects/project-trivia-react-redux/sd-07-project-trivia-react-redux/src/components/Quiz.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './Quiz.css';\n\nclass Quiz extends Component {\n  // constructor() {\n  //  super();\n  //  this.state = {\n  //    answered: false,\n  //  };\n  // }\n  // handleClick() {\n  // const { answered } = this.state;\n  //  this.setState({\n  //    answered: true,\n  //  });\n  // }\n  render() {\n    // const { answered } = this.state;\n    const _this$props = this.props,\n          results = _this$props.results,\n          nextQuestion = _this$props.nextQuestion;\n    const correctAnswer = results.correct_answer;\n    const incorrectAnswers = results.incorrect_answers;\n    const question = results.question,\n          category = results.category,\n          difficulty = results.difficulty;\n    const allQuestions = [...incorrectAnswers, correctAnswer];\n    const allIndex = allQuestions.map(question => allQuestions.indexOf(question));\n    const shuffledArray = allIndex.sort(() => Math.random() - 0.5);\n    console.log(shuffledArray);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      \"data-testid\": \"question-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, question), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, difficulty), React.createElement(\"p\", {\n      \"data-testid\": \"question-category\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, category), React.createElement(\"button\", {\n      className: \"answer-correct\",\n      \"data-testid\": \"correct-answer\",\n      type: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, correctAnswer), React.createElement(\"button\", {\n      className: \"answer-wrong\",\n      \"data-testid\": \"wrong-answer-0\",\n      type: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, incorrectAnswers[0]), React.createElement(\"button\", {\n      className: \"answer-wrong\",\n      \"data-testid\": \"wrong-answer-1\",\n      type: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, incorrectAnswers[1]), React.createElement(\"button\", {\n      className: \"answer-wrong\",\n      \"data-testid\": \"wrong-answer-2\",\n      type: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, incorrectAnswers[2]), React.createElement(\"button\", {\n      type: \"button\",\n      onClick: nextQuestion,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Pr\\xF3xima\"));\n  }\n\n}\n\nexport default Quiz;\nQuiz.propTypes = {\n  results: PropTypes.arrayOf(PropTypes.object).isRequired,\n  nextQuestion: PropTypes.func.isRequired\n};","map":{"version":3,"sources":["/home/denner/Documentos/WebDevelopment/trybe-projects/project-trivia-react-redux/sd-07-project-trivia-react-redux/src/components/Quiz.js"],"names":["React","Component","PropTypes","Quiz","render","props","results","nextQuestion","correctAnswer","correct_answer","incorrectAnswers","incorrect_answers","question","category","difficulty","allQuestions","allIndex","map","indexOf","shuffledArray","sort","Math","random","console","log","propTypes","arrayOf","object","isRequired","func"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,YAAP;;AAEA,MAAMC,IAAN,SAAmBF,SAAnB,CAA6B;AAC3B;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEAG,EAAAA,MAAM,GAAG;AACP;AADO,wBAE2B,KAAKC,KAFhC;AAAA,UAECC,OAFD,eAECA,OAFD;AAAA,UAEUC,YAFV,eAEUA,YAFV;AAAA,UAGiBC,aAHjB,GAGmCF,OAHnC,CAGCG,cAHD;AAAA,UAIoBC,gBAJpB,GAIyCJ,OAJzC,CAICK,iBAJD;AAAA,UAKCC,QALD,GAKoCN,OALpC,CAKCM,QALD;AAAA,UAKWC,QALX,GAKoCP,OALpC,CAKWO,QALX;AAAA,UAKqBC,UALrB,GAKoCR,OALpC,CAKqBQ,UALrB;AAMP,UAAMC,YAAY,GAAG,CAAC,GAAGL,gBAAJ,EAAsBF,aAAtB,CAArB;AACA,UAAMQ,QAAQ,GAAGD,YAAY,CAACE,GAAb,CAAkBL,QAAD,IAAcG,YAAY,CAACG,OAAb,CAAqBN,QAArB,CAA/B,CAAjB;AACA,UAAMO,aAAa,GAAGH,QAAQ,CAACI,IAAT,CAAc,MAAMC,IAAI,CAACC,MAAL,KAAgB,GAApC,CAAtB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,aAAZ;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,qBAAY,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiCP,QAAjC,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKE,UAAL,CAFF,EAGE;AAAG,qBAAY,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqCD,QAArC,CAHF,EAKE;AAAQ,MAAA,SAAS,EAAC,gBAAlB;AAAmC,qBAAY,gBAA/C;AAAgE,MAAA,IAAI,EAAC,QAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACIL,aADJ,CALF,EASE;AACE,MAAA,SAAS,EAAC,cADZ;AAEE,qBAAY,gBAFd;AAGE,MAAA,IAAI,EAAC,QAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKIE,gBAAgB,CAAC,CAAD,CALpB,CATF,EAiBE;AAAQ,MAAA,SAAS,EAAC,cAAlB;AAAiC,qBAAY,gBAA7C;AAA8D,MAAA,IAAI,EAAC,QAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACIA,gBAAgB,CAAC,CAAD,CADpB,CAjBF,EAqBE;AAAQ,MAAA,SAAS,EAAC,cAAlB;AAAiC,qBAAY,gBAA7C;AAA8D,MAAA,IAAI,EAAC,QAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACIA,gBAAgB,CAAC,CAAD,CADpB,CArBF,EAyBE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAGH,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAzBF,CADF;AA+BD;;AAxD0B;;AA2D7B,eAAeJ,IAAf;AAEAA,IAAI,CAACsB,SAAL,GAAiB;AACfnB,EAAAA,OAAO,EAAEJ,SAAS,CAACwB,OAAV,CAAkBxB,SAAS,CAACyB,MAA5B,EAAoCC,UAD9B;AAEfrB,EAAAA,YAAY,EAAEL,SAAS,CAAC2B,IAAV,CAAeD;AAFd,CAAjB","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './Quiz.css';\n\nclass Quiz extends Component {\n  // constructor() {\n  //  super();\n  //  this.state = {\n  //    answered: false,\n  //  };\n  // }\n\n  // handleClick() {\n  // const { answered } = this.state;\n  //  this.setState({\n  //    answered: true,\n  //  });\n  // }\n\n  render() {\n    // const { answered } = this.state;\n    const { results, nextQuestion } = this.props;\n    const { correct_answer: correctAnswer } = results;\n    const { incorrect_answers: incorrectAnswers } = results;\n    const { question, category, difficulty } = results;\n    const allQuestions = [...incorrectAnswers, correctAnswer];\n    const allIndex = allQuestions.map((question) => allQuestions.indexOf(question));\n    const shuffledArray = allIndex.sort(() => Math.random() - 0.5);\n    console.log(shuffledArray);\n    return (\n      <div>\n        <p data-testid=\"question-text\">{ question }</p>\n        <p>{ difficulty }</p>\n        <p data-testid=\"question-category\">{ category }</p>\n\n        <button className=\"answer-correct\" data-testid=\"correct-answer\" type=\"button\">\n          { correctAnswer }\n        </button>\n\n        <button\n          className=\"answer-wrong\"\n          data-testid=\"wrong-answer-0\"\n          type=\"button\"\n        >\n          { incorrectAnswers[0] }\n        </button>\n\n        <button className=\"answer-wrong\" data-testid=\"wrong-answer-1\" type=\"button\">\n          { incorrectAnswers[1] }\n        </button>\n\n        <button className=\"answer-wrong\" data-testid=\"wrong-answer-2\" type=\"button\">\n          { incorrectAnswers[2] }\n        </button>\n\n        <button type=\"button\" onClick={ nextQuestion }>\n          Pr√≥xima\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Quiz;\n\nQuiz.propTypes = {\n  results: PropTypes.arrayOf(PropTypes.object).isRequired,\n  nextQuestion: PropTypes.func.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}