{"ast":null,"code":"var _jsxFileName = \"/home/denner/Documentos/WebDevelopment/trybe-projects/project-trivia-react-redux/sd-07-project-trivia-react-redux/src/pages/Feedback.js\";\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport rankingLocalStorage from '../services/localStorageFunctions';\nimport './Feedback.css';\n\nclass Feedback extends Component {\n  componentDidMount() {\n    const _this$props = this.props,\n          name = _this$props.name,\n          score = _this$props.score,\n          picture = _this$props.picture;\n    const atualPlayer = {\n      name,\n      score,\n      picture\n    };\n    const rankingArray = rankingLocalStorage();\n    rankingArray.push(atualPlayer);\n    localStorage.setItem('ranking', JSON.stringify(rankingArray));\n  }\n\n  render() {\n    const minAssertions = 3;\n    const _this$props2 = this.props,\n          assertions = _this$props2.assertions,\n          score = _this$props2.score;\n    return React.createElement(\"div\", {\n      className: \"feedback-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      \"data-testid\": \"feedback-text\",\n      className: \"feedback-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, assertions >= minAssertions ? 'Well done!' : 'Try again'), React.createElement(\"div\", {\n      className: \"score-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"Final Score:\", ' ', React.createElement(\"span\", {\n      \"data-testid\": \"feedback-total-score\",\n      className: \"final-score\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, score)), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"Correct Answers:\", ' ', React.createElement(\"span\", {\n      \"data-testid\": \"feedback-total-question\",\n      className: \"correct-answers\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, assertions))), React.createElement(\"div\", {\n      className: \"feedback-links-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      \"data-testid\": \"btn-play-again\",\n      type: \"button\",\n      className: \"feedback-buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Play Again\")), React.createElement(Link, {\n      to: \"/ranking\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      \"data-testid\": \"btn-ranking\",\n      type: \"button\",\n      className: \"feedback-buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Ranking\"))));\n  }\n\n}\n\nFeedback.propTypes = {\n  assertions: PropTypes.number.isRequired,\n  score: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n  picture: PropTypes.string.isRequired\n};\n\nconst mapStateToProps = state => ({\n  assertions: state.player.assertions,\n  score: state.player.score,\n  name: state.player.name,\n  picture: state.player.picture\n});\n\nexport default connect(mapStateToProps)(Feedback);","map":{"version":3,"sources":["/home/denner/Documentos/WebDevelopment/trybe-projects/project-trivia-react-redux/sd-07-project-trivia-react-redux/src/pages/Feedback.js"],"names":["PropTypes","React","Component","connect","Link","rankingLocalStorage","Feedback","componentDidMount","props","name","score","picture","atualPlayer","rankingArray","push","localStorage","setItem","JSON","stringify","render","minAssertions","assertions","propTypes","number","isRequired","string","mapStateToProps","state","player"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport rankingLocalStorage from '../services/localStorageFunctions';\nimport './Feedback.css';\n\nclass Feedback extends Component {\n  componentDidMount() {\n    const { name, score, picture } = this.props;\n    const atualPlayer = { name, score, picture };\n    const rankingArray = rankingLocalStorage();\n    rankingArray.push(atualPlayer);\n\n    localStorage.setItem('ranking', JSON.stringify(rankingArray));\n  }\n\n  render() {\n    const minAssertions = 3;\n    const { assertions, score } = this.props;\n    return (\n      <div className=\"feedback-page\">\n        <p data-testid=\"feedback-text\" className=\"feedback-text\">\n          {\n            assertions >= minAssertions\n              ? 'Well done!'\n              : 'Try again'\n          }\n        </p>\n        <div className=\"score-container\">\n          <p>\n            Final Score:\n            {' '}\n            <span\n              data-testid=\"feedback-total-score\"\n              className=\"final-score\"\n            >\n              {score}\n            </span>\n          </p>\n          <p>\n            Correct Answers:\n            {' '}\n            <span\n              data-testid=\"feedback-total-question\"\n              className=\"correct-answers\"\n            >\n              {assertions}\n            </span>\n          </p>\n        </div>\n        <div className=\"feedback-links-container\">\n          <Link to=\"/\">\n            <button\n              data-testid=\"btn-play-again\"\n              type=\"button\"\n              className=\"feedback-buttons\"\n            >\n              Play Again\n            </button>\n          </Link>\n\n          <Link to=\"/ranking\">\n            <button\n              data-testid=\"btn-ranking\"\n              type=\"button\"\n              className=\"feedback-buttons\"\n            >\n              Ranking\n            </button>\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nFeedback.propTypes = {\n  assertions: PropTypes.number.isRequired,\n  score: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n  picture: PropTypes.string.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  assertions: state.player.assertions,\n  score: state.player.score,\n  name: state.player.name,\n  picture: state.player.picture,\n});\n\nexport default connect(mapStateToProps)(Feedback);\n"]},"metadata":{},"sourceType":"module"}