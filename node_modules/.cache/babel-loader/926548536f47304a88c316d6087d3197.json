{"ast":null,"code":"var _jsxFileName = \"/home/denner/Documentos/WebDevelopment/trybe-projects/project-trivia-react-redux/sd-07-project-trivia-react-redux/src/pages/Login.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport apiTriviaToken from '../services/apiTriviaToken';\nimport { fetchApiTrivia, requestTokenSuccess, sendLoginInfo } from '../redux/actions';\nimport logo from '../trivia.png';\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: '',\n      email: '' // storage: JSON.parse(localStorage.getItem('token')),\n\n    };\n    this.isValid = this.isValid.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  isValid() {\n    const _this$state = this.state,\n          name = _this$state.name,\n          email = _this$state.email;\n    const emailValid = /\\S+@\\S+\\.\\S+/;\n\n    if (name !== '' && emailValid.test(email)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  handleChange({\n    target\n  }) {\n    const name = target.name,\n          value = target.value;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  async handleClick() {\n    const _this$state2 = this.state,\n          name = _this$state2.name,\n          email = _this$state2.email;\n    const _this$props = this.props,\n          sendLogin = _this$props.sendLogin,\n          requestToken = _this$props.requestToken,\n          requestQuestions = _this$props.requestQuestions;\n    sendLogin({\n      name,\n      email\n    }); // fetchToken();\n\n    const tokenObj = await apiTriviaToken();\n    const token = tokenObj.token;\n    requestToken(token);\n    localStorage.setItem('token', token);\n    requestQuestions(token);\n  }\n\n  render() {\n    const _this$state3 = this.state,\n          name = _this$state3.name,\n          email = _this$state3.email;\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"App-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: logo,\n      className: \"App-logo\",\n      alt: \"logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"SUA VEZ\"), React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      value: name,\n      placeholder: \"Nome\",\n      \"data-testid\": \"input-player-name\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"email\",\n      name: \"email\",\n      value: email,\n      placeholder: \"E-mail\",\n      \"data-testid\": \"input-gravatar-email\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(Link, {\n      to: \"/game\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      disabled: this.isValid(),\n      \"data-testid\": \"btn-play\",\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Jogar\")), React.createElement(Link, {\n      to: \"/settings\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      \"data-testid\": \"btn-settings\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Configura\\xE7\\xF5es\")), React.createElement(Link, {\n      to: \"/ranking\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      \"data-testid\": \"btn-ranking\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Ver Ranking\")))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  sendLogin: info => dispatch(sendLoginInfo(info)),\n  requestToken: info => dispatch(requestTokenSuccess(info)),\n  requestQuestions: info => dispatch(fetchApiTrivia(info))\n});\n\nexport default connect(null, mapDispatchToProps)(Login);\nLogin.propTypes = {\n  sendLogin: PropTypes.func.isRequired,\n  requestToken: PropTypes.func.isRequired,\n  requestQuestions: PropTypes.func.isRequired\n};","map":{"version":3,"sources":["/home/denner/Documentos/WebDevelopment/trybe-projects/project-trivia-react-redux/sd-07-project-trivia-react-redux/src/pages/Login.js"],"names":["React","Component","PropTypes","connect","Link","apiTriviaToken","fetchApiTrivia","requestTokenSuccess","sendLoginInfo","logo","Login","constructor","state","name","email","isValid","bind","handleChange","handleClick","emailValid","test","target","value","setState","props","sendLogin","requestToken","requestQuestions","tokenObj","token","localStorage","setItem","render","mapDispatchToProps","dispatch","info","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport apiTriviaToken from '../services/apiTriviaToken';\nimport { fetchApiTrivia, requestTokenSuccess, sendLoginInfo } from '../redux/actions';\nimport logo from '../trivia.png';\n\nclass Login extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      name: '',\n      email: '',\n      // storage: JSON.parse(localStorage.getItem('token')),\n    };\n\n    this.isValid = this.isValid.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  isValid() {\n    const { name, email } = this.state;\n    const emailValid = /\\S+@\\S+\\.\\S+/;\n    if (name !== '' && emailValid.test(email)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  handleChange({ target }) {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  }\n\n  async handleClick() {\n    const { name, email } = this.state;\n\n    const { sendLogin, requestToken, requestQuestions } = this.props;\n    sendLogin({ name, email });\n    // fetchToken();\n    const tokenObj = await apiTriviaToken();\n    const { token } = tokenObj;\n\n    requestToken(token);\n\n    localStorage.setItem('token', token);\n    requestQuestions(token);\n  }\n\n  render() {\n    const { name, email } = this.state;\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={ logo } className=\"App-logo\" alt=\"logo\" />\n          <p>\n            SUA VEZ\n          </p>\n          <form>\n            <input\n              type=\"text\"\n              name=\"name\"\n              value={ name }\n              placeholder=\"Nome\"\n              data-testid=\"input-player-name\"\n              onChange={ this.handleChange }\n            />\n\n            <input\n              type=\"email\"\n              name=\"email\"\n              value={ email }\n              placeholder=\"E-mail\"\n              data-testid=\"input-gravatar-email\"\n              onChange={ this.handleChange }\n            />\n\n            <Link to=\"/game\">\n              <button\n                type=\"button\"\n                disabled={ this.isValid() }\n                data-testid=\"btn-play\"\n                onClick={ this.handleClick }\n              >\n                Jogar\n              </button>\n            </Link>\n\n            <Link to=\"/settings\">\n              <button\n                type=\"button\"\n                data-testid=\"btn-settings\"\n              >\n                Configurações\n              </button>\n            </Link>\n            <Link to=\"/ranking\">\n              <button\n                type=\"button\"\n                data-testid=\"btn-ranking\"\n              >\n                Ver Ranking\n              </button>\n            </Link>\n          </form>\n        </header>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  sendLogin: (info) => dispatch(sendLoginInfo(info)),\n  requestToken: (info) => dispatch(requestTokenSuccess(info)),\n  requestQuestions: (info) => dispatch(fetchApiTrivia(info)),\n});\n\nexport default connect(null, mapDispatchToProps)(Login);\n\nLogin.propTypes = {\n  sendLogin: PropTypes.func.isRequired,\n  requestToken: PropTypes.func.isRequired,\n  requestQuestions: PropTypes.func.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}