{"ast":null,"code":"var _jsxFileName = \"/home/denner/Documentos/WebDevelopment/trybe-projects/project-trivia-react-redux/sd-07-project-trivia-react-redux/src/components/Timer.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { saveTimer } from '../redux/actions';\nimport './Timer.css';\n\nclass Timer extends Component {\n  constructor() {\n    super();\n    this.state = {\n      timer: 30\n    };\n    this.reloadTimer = this.reloadTimer.bind(this);\n  }\n\n  componentDidMount() {\n    const interval = 1000;\n    setInterval(this.reloadTimer, interval);\n  }\n\n  reloadTimer() {\n    const timer = this.state.timer;\n    const answerColor = this.props.answerColor;\n\n    if (timer > 0) {\n      this.setState(prevState => ({\n        timer: prevState.timer - 1\n      }), this.checkIfAnswered);\n    } else {\n      answerColor();\n      this.setState({\n        timer: 30\n      });\n    }\n  }\n\n  checkIfAnswered() {\n    const timer = this.state.timer;\n    const _this$props = this.props,\n          resetTimer = _this$props.resetTimer,\n          restoreTimer = _this$props.restoreTimer,\n          saveTime = _this$props.saveTime;\n\n    if (resetTimer) {\n      saveTime(timer);\n      this.setState({\n        timer: 30\n      }, restoreTimer);\n    }\n  }\n\n  render() {\n    const timer = this.state.timer;\n    return React.createElement(\"div\", {\n      className: \"timer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Remaining time:\", ' ', timer);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  saveTime: info => dispatch(saveTimer(info))\n});\n\nTimer.propTypes = {\n  answerColor: PropTypes.func.isRequired,\n  restoreTimer: PropTypes.func.isRequired,\n  resetTimer: PropTypes.bool.isRequired,\n  saveTime: PropTypes.func.isRequired\n};\nexport default connect(null, mapDispatchToProps)(Timer);","map":{"version":3,"sources":["/home/denner/Documentos/WebDevelopment/trybe-projects/project-trivia-react-redux/sd-07-project-trivia-react-redux/src/components/Timer.js"],"names":["React","Component","PropTypes","connect","saveTimer","Timer","constructor","state","timer","reloadTimer","bind","componentDidMount","interval","setInterval","answerColor","props","setState","prevState","checkIfAnswered","resetTimer","restoreTimer","saveTime","render","mapDispatchToProps","dispatch","info","propTypes","func","isRequired","bool"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAO,aAAP;;AAEA,MAAMC,KAAN,SAAoBJ,SAApB,CAA8B;AAC5BK,EAAAA,WAAW,GAAG;AACZ;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE;AADI,KAAb;AAIA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,QAAQ,GAAG,IAAjB;AACAC,IAAAA,WAAW,CAAC,KAAKJ,WAAN,EAAmBG,QAAnB,CAAX;AACD;;AAEDH,EAAAA,WAAW,GAAG;AAAA,UACJD,KADI,GACM,KAAKD,KADX,CACJC,KADI;AAAA,UAEJM,WAFI,GAEY,KAAKC,KAFjB,CAEJD,WAFI;;AAGZ,QAAIN,KAAK,GAAG,CAAZ,EAAe;AACb,WAAKQ,QAAL,CAAeC,SAAD,KAAgB;AAC5BT,QAAAA,KAAK,EAAES,SAAS,CAACT,KAAV,GAAkB;AADG,OAAhB,CAAd,EAEI,KAAKU,eAFT;AAGD,KAJD,MAIO;AACLJ,MAAAA,WAAW;AACX,WAAKE,QAAL,CAAc;AACZR,QAAAA,KAAK,EAAE;AADK,OAAd;AAGD;AACF;;AAEDU,EAAAA,eAAe,GAAG;AAAA,UACRV,KADQ,GACE,KAAKD,KADP,CACRC,KADQ;AAAA,wBAE+B,KAAKO,KAFpC;AAAA,UAERI,UAFQ,eAERA,UAFQ;AAAA,UAEIC,YAFJ,eAEIA,YAFJ;AAAA,UAEkBC,QAFlB,eAEkBA,QAFlB;;AAGhB,QAAIF,UAAJ,EAAgB;AACdE,MAAAA,QAAQ,CAACb,KAAD,CAAR;AACA,WAAKQ,QAAL,CAAc;AACZR,QAAAA,KAAK,EAAE;AADK,OAAd,EAEGY,YAFH;AAGD;AACF;;AAEDE,EAAAA,MAAM,GAAG;AAAA,UACCd,KADD,GACW,KAAKD,KADhB,CACCC,KADD;AAEP,WACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAEG,GAFH,EAGGA,KAHH,CADF;AAOD;;AAnD2B;;AAsD9B,MAAMe,kBAAkB,GAAIC,QAAD,KAAe;AACxCH,EAAAA,QAAQ,EAAGI,IAAD,IAAUD,QAAQ,CAACpB,SAAS,CAACqB,IAAD,CAAV;AADY,CAAf,CAA3B;;AAIApB,KAAK,CAACqB,SAAN,GAAkB;AAChBZ,EAAAA,WAAW,EAAEZ,SAAS,CAACyB,IAAV,CAAeC,UADZ;AAEhBR,EAAAA,YAAY,EAAElB,SAAS,CAACyB,IAAV,CAAeC,UAFb;AAGhBT,EAAAA,UAAU,EAAEjB,SAAS,CAAC2B,IAAV,CAAeD,UAHX;AAIhBP,EAAAA,QAAQ,EAAEnB,SAAS,CAACyB,IAAV,CAAeC;AAJT,CAAlB;AAOA,eAAezB,OAAO,CAAC,IAAD,EAAOoB,kBAAP,CAAP,CAAkClB,KAAlC,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { saveTimer } from '../redux/actions';\nimport './Timer.css';\n\nclass Timer extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      timer: 30,\n    };\n\n    this.reloadTimer = this.reloadTimer.bind(this);\n  }\n\n  componentDidMount() {\n    const interval = 1000;\n    setInterval(this.reloadTimer, interval);\n  }\n\n  reloadTimer() {\n    const { timer } = this.state;\n    const { answerColor } = this.props;\n    if (timer > 0) {\n      this.setState((prevState) => ({\n        timer: prevState.timer - 1,\n      }), this.checkIfAnswered);\n    } else {\n      answerColor();\n      this.setState({\n        timer: 30,\n      });\n    }\n  }\n\n  checkIfAnswered() {\n    const { timer } = this.state;\n    const { resetTimer, restoreTimer, saveTime } = this.props;\n    if (resetTimer) {\n      saveTime(timer);\n      this.setState({\n        timer: 30,\n      }, restoreTimer);\n    }\n  }\n\n  render() {\n    const { timer } = this.state;\n    return (\n      <div className=\"timer\">\n        Remaining time:\n        {' '}\n        {timer}\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  saveTime: (info) => dispatch(saveTimer(info)),\n});\n\nTimer.propTypes = {\n  answerColor: PropTypes.func.isRequired,\n  restoreTimer: PropTypes.func.isRequired,\n  resetTimer: PropTypes.bool.isRequired,\n  saveTime: PropTypes.func.isRequired,\n};\n\nexport default connect(null, mapDispatchToProps)(Timer);\n"]},"metadata":{},"sourceType":"module"}