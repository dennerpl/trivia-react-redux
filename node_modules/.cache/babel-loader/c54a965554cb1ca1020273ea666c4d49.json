{"ast":null,"code":"import types from './types';\nimport apiTrivia from '../../services/apiTrivia';\nexport const sendLoginInfo = payload => ({\n  type: types.LOGIN_INFO,\n  payload\n});\nexport const isFetching = () => ({\n  type: types.IS_FETCHING\n});\nexport const requestSuccess = questions => ({\n  type: types.REQUEST_SUCCESS,\n  questions\n});\nexport const requestTokenSuccess = token => ({\n  type: types.REQUEST_TOKEN_SUCCESS,\n  token\n});\nexport const scoreUpdate = payload => ({\n  type: types.SCORE_UPDATE,\n  payload\n});\nexport const resetScore = () => ({\n  type: types.RESET_SCORE\n});\nexport const saveTimer = payload => ({\n  type: types.SAVE_TIMER,\n  payload\n});\nexport const savePicture = payload => ({\n  type: types.SAVE_PICTURE,\n  payload\n});\nexport function fetchApiTrivia(token) {\n  return async dispatch => {\n    dispatch(isFetching());\n    const questions = await apiTrivia(token);\n    dispatch(requestSuccess(questions));\n  };\n}","map":{"version":3,"sources":["/home/denner/Documentos/WebDevelopment/trybe-projects/project-trivia-react-redux/sd-07-project-trivia-react-redux/src/redux/actions/index.js"],"names":["types","apiTrivia","sendLoginInfo","payload","type","LOGIN_INFO","isFetching","IS_FETCHING","requestSuccess","questions","REQUEST_SUCCESS","requestTokenSuccess","token","REQUEST_TOKEN_SUCCESS","scoreUpdate","SCORE_UPDATE","resetScore","RESET_SCORE","saveTimer","SAVE_TIMER","savePicture","SAVE_PICTURE","fetchApiTrivia","dispatch"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,SAAlB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AAEA,OAAO,MAAMC,aAAa,GAAIC,OAAD,KAC3B;AACEC,EAAAA,IAAI,EAAEJ,KAAK,CAACK,UADd;AAEEF,EAAAA;AAFF,CAD2B,CAAtB;AAOP,OAAO,MAAMG,UAAU,GAAG,OACxB;AACEF,EAAAA,IAAI,EAAEJ,KAAK,CAACO;AADd,CADwB,CAAnB;AAMP,OAAO,MAAMC,cAAc,GAAIC,SAAD,KAC5B;AACEL,EAAAA,IAAI,EAAEJ,KAAK,CAACU,eADd;AAEED,EAAAA;AAFF,CAD4B,CAAvB;AAOP,OAAO,MAAME,mBAAmB,GAAIC,KAAD,KACjC;AACER,EAAAA,IAAI,EAAEJ,KAAK,CAACa,qBADd;AAEED,EAAAA;AAFF,CADiC,CAA5B;AAOP,OAAO,MAAME,WAAW,GAAIX,OAAD,KACzB;AACEC,EAAAA,IAAI,EAAEJ,KAAK,CAACe,YADd;AAEEZ,EAAAA;AAFF,CADyB,CAApB;AAOP,OAAO,MAAMa,UAAU,GAAG,OACxB;AACEZ,EAAAA,IAAI,EAAEJ,KAAK,CAACiB;AADd,CADwB,CAAnB;AAMP,OAAO,MAAMC,SAAS,GAAIf,OAAD,KACvB;AACEC,EAAAA,IAAI,EAAEJ,KAAK,CAACmB,UADd;AAEEhB,EAAAA;AAFF,CADuB,CAAlB;AAOP,OAAO,MAAMiB,WAAW,GAAIjB,OAAD,KACzB;AACEC,EAAAA,IAAI,EAAEJ,KAAK,CAACqB,YADd;AAEElB,EAAAA;AAFF,CADyB,CAApB;AAOP,OAAO,SAASmB,cAAT,CAAwBV,KAAxB,EAA+B;AACpC,SAAO,MAAOW,QAAP,IAAoB;AACzBA,IAAAA,QAAQ,CAACjB,UAAU,EAAX,CAAR;AACA,UAAMG,SAAS,GAAG,MAAMR,SAAS,CAACW,KAAD,CAAjC;AACAW,IAAAA,QAAQ,CAACf,cAAc,CAACC,SAAD,CAAf,CAAR;AACD,GAJD;AAKD","sourcesContent":["import types from './types';\nimport apiTrivia from '../../services/apiTrivia';\n\nexport const sendLoginInfo = (payload) => (\n  {\n    type: types.LOGIN_INFO,\n    payload,\n  }\n);\n\nexport const isFetching = () => (\n  {\n    type: types.IS_FETCHING,\n  }\n);\n\nexport const requestSuccess = (questions) => (\n  {\n    type: types.REQUEST_SUCCESS,\n    questions,\n  }\n);\n\nexport const requestTokenSuccess = (token) => (\n  {\n    type: types.REQUEST_TOKEN_SUCCESS,\n    token,\n  }\n);\n\nexport const scoreUpdate = (payload) => (\n  {\n    type: types.SCORE_UPDATE,\n    payload,\n  }\n);\n\nexport const resetScore = () => (\n  {\n    type: types.RESET_SCORE,\n  }\n);\n\nexport const saveTimer = (payload) => (\n  {\n    type: types.SAVE_TIMER,\n    payload,\n  }\n);\n\nexport const savePicture = (payload) => (\n  {\n    type: types.SAVE_PICTURE,\n    payload,\n  }\n);\n\nexport function fetchApiTrivia(token) {\n  return async (dispatch) => {\n    dispatch(isFetching());\n    const questions = await apiTrivia(token);\n    dispatch(requestSuccess(questions));\n  };\n}\n"]},"metadata":{},"sourceType":"module"}