{"ast":null,"code":"var _jsxFileName = \"/home/denner/Documentos/WebDevelopment/trybe-projects/project-trivia-react-redux/sd-07-project-trivia-react-redux/src/pages/Game.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Header from '../components/Header';\nimport Quiz from '../components/Quiz';\nimport { resetScore } from '../redux/actions';\n\nclass Game extends Component {\n  constructor(props) {\n    super(props); // const { results } = this.props;\n\n    this.state = {\n      key: 0 //  results: results,\n\n    };\n    this.nextQuestion = this.nextQuestion.bind(this);\n    this.createLocalStorage = this.createLocalStorage.bind(this);\n  }\n\n  componentDidMount() {\n    this.createLocalStorage();\n  }\n\n  createLocalStorage() {\n    const _this$props = this.props,\n          name = _this$props.name,\n          gravatarEmail = _this$props.gravatarEmail,\n          resetScoreAssertion = _this$props.resetScoreAssertion;\n    resetScoreAssertion();\n    const playerObj = {\n      player: {\n        name,\n        assertions: 0,\n        score: 0,\n        gravatarEmail\n      }\n    };\n    localStorage.setItem('state', JSON.stringify(playerObj));\n  }\n\n  nextQuestion() {\n    const key = this.state.key;\n    const history = this.props.history;\n    const numberQuestion = 4;\n\n    if (key === numberQuestion) {\n      history.push('/feedback');\n    }\n\n    if (key < numberQuestion) {\n      this.setState({\n        key: key + 1\n      });\n    }\n  }\n\n  render() {\n    const key = this.state.key;\n    const _this$props2 = this.props,\n          results = _this$props2.results,\n          isLoading = _this$props2.isLoading;\n\n    if (isLoading || results === undefined) {\n      return React.createElement(\"p\", {\n        className: \"loader\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(Quiz, {\n      nextQuestion: this.nextQuestion,\n      results: results[key],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = ({\n  game: {\n    isLoading,\n    questions: {\n      results\n    }\n  },\n  player: {\n    name,\n    assertions,\n    score,\n    gravatarEmail\n  }\n}) => ({\n  isLoading,\n  results,\n  name,\n  assertions,\n  score,\n  gravatarEmail\n});\n\nconst mapDispatchToProps = dispatch => ({\n  resetScoreAssertion: info => dispatch(resetScore(info))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Game);\nGame.propTypes = {\n  isLoading: PropTypes.bool.isRequired,\n  results: PropTypes.arrayOf(PropTypes.object).isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func\n  }).isRequired,\n  name: PropTypes.string.isRequired,\n  gravatarEmail: PropTypes.string.isRequired,\n  resetScoreAssertion: PropTypes.func.isRequired\n};","map":{"version":3,"sources":["/home/denner/Documentos/WebDevelopment/trybe-projects/project-trivia-react-redux/sd-07-project-trivia-react-redux/src/pages/Game.js"],"names":["React","Component","connect","PropTypes","Header","Quiz","resetScore","Game","constructor","props","state","key","nextQuestion","bind","createLocalStorage","componentDidMount","name","gravatarEmail","resetScoreAssertion","playerObj","player","assertions","score","localStorage","setItem","JSON","stringify","history","numberQuestion","push","setState","render","results","isLoading","undefined","mapStateToProps","game","questions","mapDispatchToProps","dispatch","info","propTypes","bool","isRequired","arrayOf","object","shape","func","string"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Header from '../components/Header';\nimport Quiz from '../components/Quiz';\nimport { resetScore } from '../redux/actions';\n\nclass Game extends Component {\n  constructor(props) {\n    super(props);\n    // const { results } = this.props;\n    this.state = {\n      key: 0,\n      //  results: results,\n    };\n    this.nextQuestion = this.nextQuestion.bind(this);\n    this.createLocalStorage = this.createLocalStorage.bind(this);\n  }\n\n  componentDidMount() {\n    this.createLocalStorage();\n  }\n\n  createLocalStorage() {\n    const { name, gravatarEmail, resetScoreAssertion } = this.props;\n    resetScoreAssertion();\n    const playerObj = { player: { name, assertions: 0, score: 0, gravatarEmail } };\n    localStorage.setItem('state', JSON.stringify(playerObj));\n  }\n\n  nextQuestion() {\n    const { key } = this.state;\n    const { history } = this.props;\n    const numberQuestion = 4;\n    if (key === numberQuestion) {\n      history.push('/feedback');\n    } if (key < numberQuestion) {\n      this.setState({\n        key: key + 1,\n      });\n    }\n  }\n\n  render() {\n    const { key } = this.state;\n    const { results, isLoading } = this.props;\n    if (isLoading || results === undefined) {\n      return <p className=\"loader\" />;\n    }\n\n    return (\n      <div>\n        <Header />\n        <Quiz\n          nextQuestion={ this.nextQuestion }\n          results={ results[key] }\n        />\n      </div>\n    );\n  }\n}\nconst mapStateToProps = ({\n  game: {\n    isLoading,\n    questions: { results },\n  },\n  player: {\n    name,\n    assertions,\n    score,\n    gravatarEmail,\n  },\n}) => ({\n  isLoading,\n  results,\n  name,\n  assertions,\n  score,\n  gravatarEmail,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  resetScoreAssertion: (info) => dispatch(resetScore(info)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Game);\n\nGame.propTypes = {\n  isLoading: PropTypes.bool.isRequired,\n  results: PropTypes.arrayOf(PropTypes.object).isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }).isRequired,\n  name: PropTypes.string.isRequired,\n  gravatarEmail: PropTypes.string.isRequired,\n  resetScoreAssertion: PropTypes.func.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}